///////////////////////////////////////////////////////////////////////////////
//  Standard Function Library                                                //
///////////////////////////////////////////////////////////////////////////////

getmaster     = [listfilter i $arg1 [ismaster    $i]]
getadmin      = [listfilter i $arg1 [isadmin     $i]]
getspectator  = [listfilter i $arg1 [isspectator $i]]
getignored    = [listfilter i $arg1 [isignored   $i]]
getbots       = [listfilter i $arg1 [isai        $i]]

get!master    = [listfilter i $arg1 [! (ismaster    $i)]]
get!admin     = [listfilter i $arg1 [! (isadmin     $i)]]
get!spectator = [listfilter i $arg1 [! (isspectator $i)]]
get!ignored   = [listfilter i $arg1 [! (isignored   $i)]]
get!bots      = [listfilter i $arg1 [! (isai        $i)]]

cmd = [
    arg5 = 0 // saving us the trouble of declaring a local var
    loopwhile i (listlen $arg1) [>= $arg5 0] [
        if ((at $arg1 $i)) [
            doargs (at $arg2 $i)
            arg5 = (+ $arg5 1)
        ] [
            doargs (at $arg3 $i)
            arg5 = -1
        ]
    ]
    if (= $arg5 (listlen $arg1)) [ doargs $arg4 ]
]

clamp  = [ max  $arg2 (min  $arg3 $arg1) ]
clampf = [ maxf $arg2 (minf $arg3 $arg1) ]

sayteamcmd = [ inputcommand $arg1 [sayteam $commandbuf] "[team]" ]
demo = [ stopdemo ; if (mode -1) [ map $arg1 ] ]

followplayer = [
    if $editing [
        .followlist = (get!spectator (listclients))
        if (< (indexof $.followlist $.followcn) 0) [ .followcn = (at $.followlist 0) ]
        if (= $.crosshairsize 0) [
            .crosshairsize = $crosshairsize
            crosshairsize 0
            .followplayer 1
        ]
        sleep 1 [ goto $.followcn ; followplayer ]
    ] [
        crosshairsize $.crosshairsize
        .crosshairsize 0
        .followplayer 0
    ]
]

nextspecmode = [
    if $specmode [
        specmode (mod (+ $specmode 1) 3)
    ] [
        specmode (+ (> $getfollow -1) 1)
    ]
]

dozoom = [
    if $zoomtoggle [
        zoom (? $zoom -1 1)
    ] [
        zoom 1
        onrelease [ zoom -1 ]
    ]
]





///////////////////////////////////////////////////////////////////////////////
//  Keybind & Combobind Definitions                                          //
///////////////////////////////////////////////////////////////////////////////

defkey = [
    local def cus
    def = [:def:@arg1] ; cus = [:cus:@arg1]
    $def = $arg2 ; $cus = []
    bind $arg1 [ keyswitch @arg1 @def @cus ]
]

defeditkey = [
    local def cus
    def = [:edef:@arg1] ; cus = [:ecus:@arg1]
    $def = $arg2 ; $cus = []
    editbind $arg1 [ keyswitch @arg1 @def @cus ]
]

defspeckey = [
    local def cus
    def = [:sdef:@arg1] ; cus = [:scus:@arg1]
    $def = $arg2 ; $cus = []
    specbind $arg1 [ keyswitch @arg1 @def @cus ]
]

setkey     = [ [:cus:@arg1]  = $arg2 ]
seteditkey = [ [:ecus:@arg1] = $arg2 ]
setspeckey = [ [:scus:@arg1] = $arg2 ]

keyswitch = [
    [:switch:@arg1] = 1
    onrelease [ [:switch:@@arg1] = 0 ]
    if (=s (getalias $arg3) "") (getalias $arg2) (getalias $arg3)
]

iskeyheld = [
    local k ; k = 0
    nodebug [
        loop+ i 1 $numargs [
            k = (+ $k $[:switch:@[arg@i]])
        ]
    ]
    = $k $numargs
]




///////////////////////////////////////////////////////////////////////////////
//  Standard Texture Commands (*.tex)                                        //
///////////////////////////////////////////////////////////////////////////////

texsky      = [ setshader "stdworld" ; texture 0 "game/sky.png" ]
texerror    = [ setshader "stdworld" ; texture 0 "game/notexture.png" ]
texnorender = [ setshader "stdworld" ; texture 0 "game/norender.png" ]
texload     = [
    if (! (exec [media/texture/@arg1.tex] 0)) [
        error [texload error: @arg1.tex not found]
        texerror
    ]
]
decalload = [
    if (! (exec [media/decal/@arg1.cfg] 0)) [
        error [decalload error: @arg1.cfg not found]
    ]
]
